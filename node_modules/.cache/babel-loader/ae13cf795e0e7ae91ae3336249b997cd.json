{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fauxir\\\\Desktop\\\\CSS-HTML-JS-REACT practice\\\\expense_chart_component\\\\src\\\\Components\\\\SpentPerDay.jsx\",\n    _s = $RefreshSig$();\n\nimport { useSelector } from \"react-redux\";\nimport GraphBar from \"./GraphBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SpentPerDay() {\n  _s();\n\n  const spent = [useSelector(state => state.moneySpent.value)];\n  const received = [useSelector(state => state.totMoney.value)];\n  let reduxProcess = spent.toString().split(\",\").map(str => {\n    //process redux data aka array with money spent per day\n    return Number(str);\n  });\n  let days = [\"mon\", \"tue\", \"wed\", \"thur\", \"fri\", \"sat\", \"sun\"];\n  let style = \"w-6 bg-terracotta-500 rounded-sm hover:bg-neptune-500 h-\";\n  let id = [1, 2, 3, 4, 5, 6, 7];\n  const height = [0, 2, 4, 6, 8, 9, 12, 16, 20, 24];\n\n  let calculcatePercentage = () => {\n    let finalArray = [];\n    reduxProcess.forEach(element => {\n      let percentage = Math.trunc(1 / (received / element) * 100);\n\n      if (percentage === 0) {\n        finalArray.push(style + height[0]);\n      } else if (percentage > 10 && percentage <= 90) {\n        finalArray.push(style + height[Math.floor(percentage / 10)]);\n      } else if (percentage > 0 && percentage < 10) {\n        finalArray.push(style + height[Math.floor(percentage / 10) + 1]);\n      } else if (percentage > 90) {\n        finalArray.push(style + height[9]);\n      }\n    });\n    return finalArray;\n  };\n\n  let a = calculcatePercentage(); //let styleHeightArray = calculcatePercentage;\n\n  const dayIncome = id.map((id, index) => {\n    //convert all data arrays to object to be passed to GraphBar comp\n    let dataObj = {};\n    dataObj.id = id;\n    dataObj.day = days[index];\n    dataObj.style = a[index];\n    dataObj.spent = reduxProcess[index];\n    return dataObj;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full flex items-end h-fit mt-6\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-row items-end justify-around w-full h-fit\",\n      children: dayIncome.map(props => {\n        return /*#__PURE__*/_jsxDEV(GraphBar, {\n          day: props.day,\n          spent: props.spent,\n          style: props.style\n        }, props.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SpentPerDay, \"cUHRU3MzAg4zwGveL0Rf2UZhKmU=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = SpentPerDay;\nexport default SpentPerDay;\n\nvar _c;\n\n$RefreshReg$(_c, \"SpentPerDay\");","map":{"version":3,"names":["useSelector","GraphBar","SpentPerDay","spent","state","moneySpent","value","received","totMoney","reduxProcess","toString","split","map","str","Number","days","style","id","height","calculcatePercentage","finalArray","forEach","element","percentage","Math","trunc","push","floor","a","dayIncome","index","dataObj","day","props"],"sources":["C:/Users/Fauxir/Desktop/CSS-HTML-JS-REACT practice/expense_chart_component/src/Components/SpentPerDay.jsx"],"sourcesContent":["import { useSelector } from \"react-redux\";\r\nimport GraphBar from \"./GraphBar\";\r\n\r\nfunction SpentPerDay() {\r\n  const spent = [useSelector((state) => state.moneySpent.value)];\r\n  const received = [useSelector((state) => state.totMoney.value)];\r\n\r\n  let reduxProcess = spent\r\n    .toString()\r\n    .split(\",\")\r\n    .map((str) => {\r\n      //process redux data aka array with money spent per day\r\n      return Number(str);\r\n    });\r\n\r\n  let days = [\"mon\", \"tue\", \"wed\", \"thur\", \"fri\", \"sat\", \"sun\"];\r\n\r\n  let style = \"w-6 bg-terracotta-500 rounded-sm hover:bg-neptune-500 h-\"\r\n\r\n  let id = [1, 2, 3, 4, 5, 6, 7];\r\n\r\n  const height = [0, 2, 4, 6, 8, 9, 12, 16, 20, 24];\r\n\r\n  let calculcatePercentage = () => {\r\n    let finalArray = [];\r\n    reduxProcess.forEach((element) => {\r\n      let percentage = Math.trunc((1 / (received / element)) * 100);\r\n      \r\n      if (percentage === 0) {\r\n        finalArray.push(style+height[0]);\r\n      } else if (percentage > 10 && percentage <= 90) {\r\n        finalArray.push(style+height[Math.floor(percentage / 10)]);\r\n      } else if (percentage > 0 && percentage < 10) {\r\n        finalArray.push(style+height[(Math.floor(percentage / 10))+1]);\r\n      } else if (percentage > 90) {\r\n        finalArray.push(style+height[9]);\r\n      }\r\n    });\r\n    return finalArray;\r\n  }\r\n\r\n  let a = calculcatePercentage();\r\n\r\n   //let styleHeightArray = calculcatePercentage;\r\n\r\n  const dayIncome = id.map((id, index) => { //convert all data arrays to object to be passed to GraphBar comp\r\n    let dataObj = {};\r\n    dataObj.id = id;\r\n    dataObj.day = days[index];\r\n    dataObj.style = a[index];\r\n    dataObj.spent = reduxProcess[index];\r\n    return dataObj;\r\n  });\r\n\r\n  return (\r\n    <div className=\"w-full flex items-end h-fit mt-6\">\r\n      <div className=\"flex flex-row items-end justify-around w-full h-fit\">\r\n        {dayIncome.map((props) => {\r\n          return (\r\n            <GraphBar key={props.id} day={props.day} spent={props.spent} style={props.style}/>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SpentPerDay;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}